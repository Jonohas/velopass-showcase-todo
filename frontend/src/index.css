@import "tailwindcss";

:root {
    --bg-color: hsl(44.7,5%,10%);
    --fg-color: hsl(44.7,100%,95%);
    --border-color: hsl(44.7,5%,20%);
    --card-bg-color: hsl(44.7,5%,15%);
    --fg-color-primary: hsl(44.7,20%,10%);
    --color-primary: hsl(44.7,100%,48.4%);
    --color-primary-hover: hsl(44.7,100%,40%);
    --color-primary-dark: hsl(45, 100%, 25%);
    --input-background-color: hsl(44.7,5%,20%);
    --input-background-color-hover: hsl(44.7,5%,25%);

    --space: 1rem; /* your base unit */
}

@font-face {
    font-family: 'FiraSans';
    src: url('./fonts/FiraSans/Regular.ttf') format('truetype');
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: 'FiraSans';
    src: url('./fonts/FiraSans/SemiBold.ttf') format('truetype');
    font-weight: 500;
    font-style: normal;
}

@font-face {
    font-family: 'FiraSans';
    src: url('./fonts/FiraSans/Bold.ttf') format('truetype');
    font-weight: 600;
    font-style: normal;
}

@font-face {
    font-family: 'FiraSans';
    src: url('./fonts/FiraSans/Black.ttf') format('truetype');
    font-weight: 700;
    font-style: normal;
}

@layer base {
    html {
        font-family: 'FiraSans', system-ui, sans-serif;
    }
}

@layer components {
    .text-heading1 {
        @apply text-5xl font-bold leading-tight tracking-tight;
    }

    .text-heading2 {
        @apply text-4xl font-bold leading-tight tracking-tight;
    }

    .text-heading3 {
        @apply text-3xl font-semibold leading-snug tracking-normal;
    }

    .text-heading4 {
        @apply text-2xl font-semibold leading-snug tracking-normal;
    }

    .text-body1 {
        @apply text-base leading-relaxed tracking-wide;
    }

    .text-body2 {
        @apply text-xl leading-relaxed tracking-wide;
    }

    .text-caption {
        @apply text-sm leading-normal tracking-wider;
    }
}

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

body {
    background-color: var(--bg-color);
    color: var(--fg-color);
}

form {
    display: flex;
    flex-direction: row;
    gap: calc(var(--space) * .7);
}

input[type=text] {
    color: var(--fg-color);
    border-color: var(--border-color);
    border-radius: 0.25rem;
    border-width: 1px;
    border-style: solid;
    
    padding: 0.25rem;
}
input[type=text]:active, input[type=text]:focus {
    outline: none; /* prevent default outline */
    box-shadow: 0 0 0 calc(var(--space) * 0.3) var(--color-primary-dark); /* custom focus ring */
    border-color: var(--color-primary);
}

input[type=submit] {
    --padding: calc(var(--space) * .4);
    background-color: var(--color-primary);
    color: var(--fg-color-primary);
    
    border-radius: var(--padding);
    padding: var(--padding);
}
input[type=submit]:hover {
    background-color: var(--color-primary-hover);
    cursor: pointer;
}
input[type=submit]:focus {
    outline: calc(var(--space) * .15) solid var(--color-primary);
    outline-offset: calc(var(--space) * .25);
    cursor: pointer;
}

.card {
    --padding: calc(var(--space));
    border-radius: var(--padding);
    padding: var(--padding);
    background-color: var(--card-bg-color);
    min-height: 50%;
    width: 20%;
    gap: calc(var(--space) * .5);
    
    @apply flex flex-col;
}

.todoList {
    --padding: calc(var(--space) * .5);
    display: flex;
    flex-direction: column;
    gap: calc(var(--space) * .5);
    height: 100%;
    border-radius: calc(var(--padding));
}

.todoItem {
    --padding: calc(var(--space) * .5);
    display: flex;
    flex-direction: row;
    gap: calc(var(--space) * .5);
    padding: var(--padding);
}

.todoItem:hover {
    border-radius: var(--padding);
    background-color: var(--bg-color);
}

.todoItem.done {
    text-decoration: line-through;
}

.removeItem {
    @apply p-2 rounded;
    color: var(--fg-color);
}

.removeItem:hover {
    @apply bg-red-500;
    cursor: pointer;
}

/* Customize the label (the container) */
.container {
    flex: 1;
    overflow: hidden;
    display: flex;
    align-items: center;
    position: relative;
    cursor: pointer;
    user-select: none;
    gap: calc(var(--space) * .5);
    padding: calc(var(--space) * .35);
}

.container .label {
    flex: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Hide the browser's default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkmark-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    --padding: calc(var(--space) * .2);
    min-height: calc(var(--space) * 1.3);
    min-width: calc(var(--space) * 1.3);
    background-color: var(--input-background-color);
    border-radius: var(--padding);
    border-width: 1px;
    border-style: solid;
    border-color: var(--border-color);
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark-container {
    background-color: var(--input-background-color-hover);
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark-container {
    background-color: var(--color-primary);
}

/* When the checkbox is checked, add a blue background */
.container .checkmark-container .checkmark {
    color: var(--fg-color-primary);
    stroke-width: 2px;
    display: none;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark-container .checkmark {
    display: block;
}

/* When the checkbox is checked, add a blue background */
.container input:focus ~ .checkmark-container {
    outline: none; /* prevent default outline */
    box-shadow: 0 0 0 calc(var(--space) * 0.3) var(--color-primary-dark); /* custom focus ring */
    border-color: var(--color-primary);
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark {
    display: block;
}

.inputError {
    @apply border-red-500;
}